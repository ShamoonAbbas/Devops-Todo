version: '3.8'

services:
  # Main Todo Application Services (from parent directory)
  mongo:
    image: mongo:latest
    container_name: mongo-test
    restart: unless-stopped
    ports:
      - "28018:27017"
    volumes:
      - mongo_test_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-secretpassword}
    command: ["--auth", "--bind_ip_all"]
    networks:
      - todo-test-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: ../todo_backend
      dockerfile: Dockerfile
      args:
        - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-secretpassword}@mongo:27017/todos?authSource=admin
        - NODE_ENV=test
    container_name: backend-test
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-secretpassword}@mongo:27017/todos?authSource=admin
      - NODE_ENV=test
      - PORT=5000
      - CORS_ORIGIN=*
    ports:
      - '5100:5000'
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - todo-test-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ../todo_frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:5100
        - NODE_ENV=test
    container_name: frontend-test
    restart: unless-stopped
    ports:
      - '3100:3000'
    environment:
      - REACT_APP_API_URL=http://localhost:5100
      - NODE_ENV=test
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - todo-test-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Selenium Grid Hub
  selenium-hub:
    image: selenium/hub:4.15.0
    container_name: selenium-hub-test
    ports:
      - "4444:4444"
      - "4442:4442"
      - "4443:4443"
    environment:
      - GRID_MAX_SESSION=5
      - GRID_BROWSER_TIMEOUT=60
      - GRID_TIMEOUT=60
      - GRID_NEW_SESSION_WAIT_TIMEOUT=60
    networks:
      - todo-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4444/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Chrome node for Selenium Grid
  chrome:
    image: selenium/node-chrome:4.15.0
    container_name: chrome-node-test
    depends_on:
      selenium-hub:
        condition: service_healthy
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
      - NODE_MAX_INSTANCES=2
      - NODE_MAX_SESSION=2
      - START_XVFB=false
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - todo-test-network

  # Test Runner
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.standalone
    container_name: todo-tests
    volumes:
      - ./test-results:/app/testcases/test-results
      - ./screenshots:/app/testcases/screenshots
      - ./logs:/app/testcases/logs
      - .:/app/testcases
    environment:
      - NODE_ENV=test
      - DOCKER_ENV=true
      - TEST_TIMEOUT=60000
      - FRONTEND_URL=http://frontend:3000
      - BACKEND_URL=http://backend:5000
      - USE_SELENIUM_GRID=false
      - SELENIUM_HUB_URL=http://selenium-hub:4444/wd/hub
    networks:
      - todo-test-network
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    command: ["npm", "test"]
    profiles:
      - test

  # Test Runner with Selenium Grid
  test-runner-grid:
    build:
      context: .
      dockerfile: Dockerfile.standalone
    container_name: todo-tests-grid
    volumes:
      - ./test-results:/app/testcases/test-results
      - ./screenshots:/app/testcases/screenshots
      - ./logs:/app/testcases/logs
    environment:
      - NODE_ENV=test
      - DOCKER_ENV=true
      - TEST_TIMEOUT=60000
      - FRONTEND_URL=http://frontend:3000
      - BACKEND_URL=http://backend:5000
      - USE_SELENIUM_GRID=true
      - SELENIUM_HUB_URL=http://selenium-hub:4444/wd/hub
    networks:
      - todo-test-network
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
      selenium-hub:
        condition: service_healthy
      chrome:
        condition: service_started
    command: ["npm", "test"]
    profiles:
      - grid-test

  # Test Report Server
  test-reports:
    image: nginx:alpine
    container_name: test-reports
    ports:
      - "8080:80"
    volumes:
      - ./test-results:/usr/share/nginx/html/reports:ro
      - ./screenshots:/usr/share/nginx/html/screenshots:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - todo-test-network
    profiles:
      - reports

networks:
  todo-test-network:
    driver: bridge

volumes:
  mongo_test_data:
